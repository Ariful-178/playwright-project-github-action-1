name: Playwright Test & Deploy Report

on:
  schedule:
    # 3 PM Bangladesh time = 09:00 UTC
    - cron: "0 9 * * *"
  workflow_dispatch: # allows manual run

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.test-status.outcome }}
      date-foldername: ${{ steps.set-date.outputs.date-foldername }}
      date-filename: ${{ steps.set-date.outputs.date-filename }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Set date formats
        id: set-date
        run: |
          # For folder names (YYYY-MM-DD)
          FOLDER_DATE=$(date +'%Y-%m-%d')
          echo "date-foldername=$FOLDER_DATE" >> $GITHUB_OUTPUT
          
          # For display (DD Month YYYY)
          DISPLAY_DATE=$(date +'%-d %B %Y')
          echo "date-displayname=$DISPLAY_DATE" >> $GITHUB_OUTPUT
          
          # For filename (YYYYMMDD)
          FILENAME_DATE=$(date +'%Y%m%d')
          echo "date-filename=$FILENAME_DATE" >> $GITHUB_OUTPUT
          
          echo "Using date formats:"
          echo "Folder: $FOLDER_DATE"
          echo "Display: $DISPLAY_DATE"
          echo "Filename: $FILENAME_DATE"

      - name: Run Playwright tests
        id: playwright-tests
        run: |
          npx playwright test --reporter=html || echo "::warning::Some tests failed"
          # Capture test exit status
          echo "exit_code=$?" >> $GITHUB_OUTPUT

      - name: Check test results
        id: test-status
        run: |
          if [ "${{ steps.playwright-tests.outputs.exit_code }}" -eq "0" ]; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "All tests passed!"
          else
            echo "status=failure" >> $GITHUB_OUTPUT
            echo "Some tests failed. Continuing with deployment of results..."
          fi

      - name: Prepare dated report folder
        run: |
          mkdir -p public/${{ steps.set-date.outputs.date-foldername }}
          cp -r playwright-report/* public/${{ steps.set-date.outputs.date-foldername }}/
          
          # Copy latest report to root for easy access
          mkdir -p public/latest
          cp -r playwright-report/* public/latest/
          
          # Generate comprehensive index page with all reports
          echo "<!DOCTYPE html><html><head><title>Playwright Test Reports</title>" > public/index.html
          echo "<meta charset='UTF-8'><meta name='viewport' content='width=device-width, initial-scale=1.0'>" >> public/index.html
          echo "<style>" >> public/index.html
          echo "body{font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; margin: 0; padding: 20px; background-color: #f5f5f5;}" >> public/index.html
          echo "h1{color: #24292e; text-align: center; margin-bottom: 30px;}" >> public/index.html
          echo ".container{max-width: 800px; margin: 0 auto; background: white; padding: 30px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);}" >> public/index.html
          echo ".header{display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;}" >> public/index.html
          echo ".status{display: inline-block; padding: 5px 10px; border-radius: 4px; font-weight: bold;}" >> public/index.html
          echo ".status-success{background-color: #d4edda; color: #155724;}" >> public/index.html
          echo ".status-failure{background-color: #f8d7da; color: #721c24;}" >> public/index.html
          echo "ul{list-style-type: none; padding: 0;}" >> public/index.html
          echo "li{margin: 12px 0; padding: 12px; background: #f8f9fa; border-radius: 4px; display: flex; justify-content: space-between;}" >> public/index.html
          echo "a{text-decoration: none; color: #0366d6; font-weight: 500;}" >> public/index.html
          echo "a:hover{text-decoration: underline;}" >> public/index.html
          echo ".date{color: #6a737d;}" >> public/index.html
          echo ".latest-badge{background: #0366d6; color: white; padding: 2px 8px; border-radius: 12px; font-size: 12px; margin-left: 8px;}" >> public/index.html
          echo "</style></head>" >> public/index.html
          echo "<body><div class='container'>" >> public/index.html
          echo "<div class='header'><h1>Playwright Test Reports</h1>" >> public/index.html
          echo "<span class='status status-${{ steps.test-status.outputs.status }}'>${{ steps.test-status.outputs.status }}</span></div>" >> public/index.html
          echo "<p>Test run completed on ${{ steps.set-date.outputs.date-displayname }}</p>" >> public/index.html
          echo "<h2>Available Reports:</h2>" >> public/index.html
          echo "<ul>" >> public/index.html
          
          # Add latest report link
          echo "<li><a href='latest/index.html'>Latest Report <span class='latest-badge'>NEW</span></a> <span class='date'>${{ steps.set-date.outputs.date-displayname }}</span></li>" >> public/index.html
          
          # Find all dated folders and list them in reverse chronological order
          for dir in $(find public -maxdepth 1 -type d -name "20*" | sort -r); do
            if [ "$dir" != "public" ]; then
              dirname=$(basename $dir)
              display_date=$(date -j -f "%Y-%m-%d" "$dirname" +"%-d %B %Y" 2>/dev/null || date -d "$dirname" +"%-d %B %Y")
              echo "<li><a href='$dirname/index.html'>$display_date</a> <span class='date'>$dirname</span></li>" >> public/index.html
            fi
          done
          
          echo "</ul></div></body></html>" >> public/index.html

      - name: Upload test report artifact
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ steps.set-date.outputs.date-filename }}
          path: public
          retention-days: 7

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: always() # Always run deploy even if tests fail
    
    steps:
      - name: Download test report artifact
        uses: actions/download-artifact@v4
        with:
          name: playwright-report-${{ needs.test.outputs.date-filename }}
          path: public

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Report deployment status
        run: |
          if [ "${{ needs.test.outputs.status }}" == "success" ]; then
            echo "‚úÖ All tests passed and report deployed successfully!"
            echo "üìä View report at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ needs.test.outputs.date-foldername }}/"
          else
            echo "‚ùå Some tests failed! Report deployed with failure details."
            echo "üìä View report at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ needs.test.outputs.date-foldername }}/"
            # Exit with error code to mark workflow as failed
            exit 1
          fi
